{"ast":null,"code":"import { userAPI } from \"../../ApiGateWay/apiHandler/controllers\";\nimport { USER_REG_DATA } from \"./ActionType\";\nexport function UserDetails(userdata) {\n  console.log(\"fdesdsdfsfdirst\", userdata);\n  return async function (dispatch) {\n    dispatch({\n      type: USER_REG_DATA.REQ_USER_DATA\n    });\n    try {\n      const res = await userAPI.registrationUser(userdata);\n      if (res.ResponseStatus === 200) {\n        dispatch({\n          type: USER_REG_DATA.SUCCESS_USER_DATA,\n          payload: \"Done\"\n        });\n      }\n      if (res.ResponseStatus === 400) {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: USER_REG_DATA.FAIL_USER_DATA,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: USER_REG_DATA.FAIL_USER_DATA,\n        payload: {\n          error: 'An error occurred while Adding Data'\n        }\n      });\n    }\n  };\n}\n_c = UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["userAPI","USER_REG_DATA","UserDetails","userdata","console","log","dispatch","type","REQ_USER_DATA","res","registrationUser","ResponseStatus","SUCCESS_USER_DATA","payload","error","data","FAIL_USER_DATA","_c","$RefreshReg$"],"sources":["D:/Mern_Git/MERNtraining/Form_Validation/Frontend_NodeJs/form_validation/src/Redux/Action/UserAction.js"],"sourcesContent":["\r\nimport { userAPI } from \"../../ApiGateWay/apiHandler/controllers\";\r\nimport { USER_REG_DATA } from \"./ActionType\";\r\n\r\n\r\nexport function UserDetails(userdata) {\r\n    console.log(\"fdesdsdfsfdirst\",userdata)\r\n    return async function (dispatch) {\r\n        dispatch({ type: USER_REG_DATA.REQ_USER_DATA })\r\n        try {\r\n            const res = await userAPI.registrationUser(userdata);\r\n            if (res.ResponseStatus === 200) {\r\n                dispatch({\r\n                    type: USER_REG_DATA.SUCCESS_USER_DATA,\r\n                    payload: \"Done\",\r\n                })\r\n            }\r\n\r\n            if (res.ResponseStatus === 400) {\r\n                const { error } = res.data;\r\n                dispatch({\r\n                    type: USER_REG_DATA.FAIL_USER_DATA,\r\n                    payload: { error },\r\n                })\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_REG_DATA.FAIL_USER_DATA,\r\n                payload: { error: 'An error occurred while Adding Data' },\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,yCAAyC;AACjE,SAASC,aAAa,QAAQ,cAAc;AAG5C,OAAO,SAASC,WAAWA,CAACC,QAAQ,EAAE;EAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACF,QAAQ,CAAC;EACvC,OAAO,gBAAgBG,QAAQ,EAAE;IAC7BA,QAAQ,CAAC;MAAEC,IAAI,EAAEN,aAAa,CAACO;IAAc,CAAC,CAAC;IAC/C,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMT,OAAO,CAACU,gBAAgB,CAACP,QAAQ,CAAC;MACpD,IAAIM,GAAG,CAACE,cAAc,KAAK,GAAG,EAAE;QAC5BL,QAAQ,CAAC;UACLC,IAAI,EAAEN,aAAa,CAACW,iBAAiB;UACrCC,OAAO,EAAE;QACb,CAAC,CAAC;MACN;MAEA,IAAIJ,GAAG,CAACE,cAAc,KAAK,GAAG,EAAE;QAC5B,MAAM;UAAEG;QAAM,CAAC,GAAGL,GAAG,CAACM,IAAI;QAC1BT,QAAQ,CAAC;UACLC,IAAI,EAAEN,aAAa,CAACe,cAAc;UAClCH,OAAO,EAAE;YAAEC;UAAM;QACrB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZR,QAAQ,CAAC;QACLC,IAAI,EAAEN,aAAa,CAACe,cAAc;QAClCH,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAsC;MAC5D,CAAC,CAAC;IACN;EACJ,CAAC;AAEL;AAACG,EAAA,GA5Bef,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}