{"ast":null,"code":"// import { ResponseStatus } from '../../../apiUtils/interfacesAndTypes.ts/enum';\nimport { commanResponse } from '../../../apiUtils/models/commonResponse';\n//import * as yup from 'yup';\nimport UserService from '../../services/index';\nimport { ResponseStatus } from '../../../apiUtils/interfacesAndTypes';\nexport const userController = {\n  registrationUser\n};\nasync function registrationUser(object) {\n  try {\n    let responseOBJ = new commanResponse();\n\n    //schema for payload\n    // let userSchema = yup.object({\n    //     name: yup.string().required(),\n    //     mobile: yup.string().required(),\n    //     email: yup.string().required(),\n    //     password: yup.string().required(),\n    //     age: yup.string().required(),\n    //     gender: yup.string().required(),\n    //     Birthday: yup.string().required(),\n    //     hobbies: yup.string().required(),\n    //     favcolor: yup.string().required(),\n    //     time: yup.string().required(),\n\n    // });\n\n    // if (await userSchema.isValid(object)) {\n    const response = await UserService.UserService.registrationUser(object);\n    if (response) {\n      responseOBJ.Status = (response === null || response === void 0 ? void 0 : response.status) === 200 ? true : false;\n      responseOBJ.Result = response !== null && response !== void 0 && response.data ? response === null || response === void 0 ? void 0 : response.data : undefined;\n      responseOBJ.ResponseStatus = response.status;\n    }\n    // } else {\n    //     responseOBJ.ResponseStatus = ResponseStatus.UnprocessableEntity;\n    //     responseOBJ.Status = false;\n    //     responseOBJ.Message = await userSchema\n    //         .validate(object)\n    //         .catch((e) => e.message);\n    // }\n    return responseOBJ;\n  } catch (error) {\n    console.log('error From controller::>', error);\n  }\n}","map":{"version":3,"names":["commanResponse","UserService","ResponseStatus","userController","registrationUser","object","responseOBJ","response","Status","status","Result","data","undefined","error","console","log"],"sources":["D:/Mern_Git/MERNtraining/Form_Validation/Frontend_NodeJs/form_validation/src/ApiGateWay/apiHandler/controllers/user/index.js"],"sourcesContent":["// import { ResponseStatus } from '../../../apiUtils/interfacesAndTypes.ts/enum';\r\nimport { commanResponse } from '../../../apiUtils/models/commonResponse';\r\n//import * as yup from 'yup';\r\nimport UserService from '../../services/index';\r\nimport { ResponseStatus } from '../../../apiUtils/interfacesAndTypes';\r\nexport const userController = {\r\n    registrationUser\r\n};\r\n\r\nasync function registrationUser(object) {\r\n    try {\r\n        let responseOBJ = new commanResponse();\r\n\r\n        //schema for payload\r\n        // let userSchema = yup.object({\r\n        //     name: yup.string().required(),\r\n        //     mobile: yup.string().required(),\r\n        //     email: yup.string().required(),\r\n        //     password: yup.string().required(),\r\n        //     age: yup.string().required(),\r\n        //     gender: yup.string().required(),\r\n        //     Birthday: yup.string().required(),\r\n        //     hobbies: yup.string().required(),\r\n        //     favcolor: yup.string().required(),\r\n        //     time: yup.string().required(),\r\n\r\n        // });\r\n\r\n        // if (await userSchema.isValid(object)) {\r\n        const response = await UserService.UserService.registrationUser(object);\r\n\r\n        if (response) {\r\n            responseOBJ.Status = response?.status === 200 ? true : false;\r\n            responseOBJ.Result = response?.data ? response?.data : undefined;\r\n            responseOBJ.ResponseStatus = response.status;\r\n        }\r\n        // } else {\r\n        //     responseOBJ.ResponseStatus = ResponseStatus.UnprocessableEntity;\r\n        //     responseOBJ.Status = false;\r\n        //     responseOBJ.Message = await userSchema\r\n        //         .validate(object)\r\n        //         .catch((e) => e.message);\r\n        // }\r\n        return responseOBJ;\r\n    } catch (error) {\r\n        console.log('error From controller::>', error);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,yCAAyC;AACxE;AACA,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,sCAAsC;AACrE,OAAO,MAAMC,cAAc,GAAG;EAC1BC;AACJ,CAAC;AAED,eAAeA,gBAAgBA,CAACC,MAAM,EAAE;EACpC,IAAI;IACA,IAAIC,WAAW,GAAG,IAAIN,cAAc,CAAC,CAAC;;IAEtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA,MAAMO,QAAQ,GAAG,MAAMN,WAAW,CAACA,WAAW,CAACG,gBAAgB,CAACC,MAAM,CAAC;IAEvE,IAAIE,QAAQ,EAAE;MACVD,WAAW,CAACE,MAAM,GAAG,CAAAD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,MAAM,MAAK,GAAG,GAAG,IAAI,GAAG,KAAK;MAC5DH,WAAW,CAACI,MAAM,GAAGH,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEI,IAAI,GAAGJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,IAAI,GAAGC,SAAS;MAChEN,WAAW,CAACJ,cAAc,GAAGK,QAAQ,CAACE,MAAM;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAOH,WAAW;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;EAClD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}